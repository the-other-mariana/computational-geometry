from glibrary import Point
from etree import *
from ttree import *

etree = Q()
e1 = Event(Point(10, 5), 0, 0)
etree.insert(e1)
e2 = Event(Point(10, 6), 0, 1)
etree.insert(e2)
etree.insert(Event(Point(9, 3), 1, 0))
etree.insert(Event(Point(14, 1), 1, 1))
in_array = Q.inorder(etree.root)
print(in_array)
print(etree.root.value)
print(etree.root.left_child.value)
print(etree.root.right_child.value)
print(etree.root.right_child.right_child.value)
#etree.deleteValue(Point(14, 1))
#etree.deleteValue(Point(10, 5))
'''
etree.deleteNode(etree.root)
in_array = Q.inorder(etree.root)
print(in_array, etree.root.value)
'''
#node = etree.find(Point(10,6))
#print(node.value)
node = etree.find(Point(10, 5))
next = etree.getNextInorder(node)
print("next from point:", next.value)
next = etree.getNext()
print("next:", next)

tline = T()
t1 = Point(5,15)
s1 = Segment(Point(10,5), Point(10,6))
s2 = Segment(Point(-1,3), Point(3,5))
s3 = Segment(Point(1,1), Point(-2,10))
tline.insert(s1, t1)
tline.insert(s2, t1)
tline.insert(s3, t1)
in_array = T.inorder(tline.root)
[print(type(s)) for s in in_array]
print(tline.search(s1,t1))
print(in_array)
print(tline.root.value)
print(tline.root.left_child.value)
print(tline.root.right_child.value)

s = int(input())
print(s)
